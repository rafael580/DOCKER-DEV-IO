# Versão do Docker Compose
version: '3.8'

# Definição dos serviços
services:
  # Serviço MySQL
  mysql:
    # Imagem do MySQL a ser utilizada (versão 8.0)
    image: mysql:8.0

    # Nome do contêiner
    container_name: mysql_container

    # Variáveis de ambiente para configurar o MySQL
    environment:
      # Senha do usuário root
      MYSQL_ROOT_PASSWORD: rootpassword
      # Nome do banco de dados que será criado automaticamente
      MYSQL_DATABASE: mydatabase
      # Usuário que será criado automaticamente
      MYSQL_USER: myuser
      # Senha do usuário criado
      MYSQL_PASSWORD: mypassword

    # Mapeamento de portas (host:contêiner)
    ports:
      - "3306:3306"  # Expõe a porta 3306 do contêiner para a porta 3306 do host

    # Volumes para persistência de dados
    volumes:
      - mysql_data:/var/lib/mysql  # Persiste os dados do MySQL em um volume

    # Conecta o contêiner a uma rede específica
    networks:
      - mynetwork

    # Configuração de verificação de saúde
    healthcheck:
      # Comando para verificar se o MySQL está funcionando
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      # Intervalo entre verificações
      interval: 10s
      # Tempo limite para a verificação
      timeout: 5s
      # Número de tentativas antes de considerar o contêiner como não saudável
      retries: 5

    # Comando personalizado para inicialização do MySQL
    command: --default-authentication-plugin=mysql_native_password

    # Configuração de logging
    logging:
      # Driver de logging (json-file é o padrão)
      driver: "json-file"
      options:
        # Tamanho máximo do arquivo de log
        max-size: "10m"
        # Número máximo de arquivos de log
        max-file: "3"

# Definição dos volumes
volumes:
  # Volume para persistir os dados do MySQL
  mysql_data:

# Definição das redes
networks:
  # Rede personalizada para conectar os serviços
  mynetwork: